{"version":3,"sources":["DigitButton.js","OperationButton.js","App.js","reportWebVitals.js","index.js"],"names":["DigitButton","_ref","dispatch","digit","react_default","a","createElement","onClick","type","ACTIONS","ADD_DIGIT","payload","OperationButton","operation","CHOOSE_OPERATION","CLEAR","DELETE_DIGIT","EVALUATE","reducer","state","overwrite","Object","objectSpread","currentOperand","includes","concat","previousOperand","evaluate","length","slice","_ref2","current","parseFloat","prev","isNaN","calculation","toString","INTEGER_FORMATTER","Intl","NumberFormat","maximumFractionDigits","formatOperand","operand","_operand$split","split","_operand$split2","slicedToArray","integer","decimal","format","App","_useReducer","useReducer","_useReducer2","_useReducer2$","className","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.7d4936af.chunk.js","sourcesContent":["import React from \"react\";\nimport { ACTIONS } from \"./App\"\n\nexport default function DigitButton({ dispatch, digit }) {\n    return (\n        <button\n        onClick={() => dispatch({type: ACTIONS.ADD_DIGIT, payload: {digit}})}\n        >\n            {digit}\n        </button>\n    )\n}","import React from \"react\";\nimport { ACTIONS } from \"./App\"\n\nexport default function OperationButton({ dispatch, operation }) {\n    return (\n        <button\n        onClick={() => dispatch({type: ACTIONS.CHOOSE_OPERATION, payload: {operation}})}\n        >\n            {operation}\n        </button>\n    )\n}","import React from \"react\";\nimport { useReducer } from \"react\";\nimport DigitButton from \"./DigitButton\";\nimport OperationButton from \"./OperationButton\";\nimport \"./styles.css\";\n\nexport const ACTIONS = {\n  ADD_DIGIT: \"add-digit\",\n  CHOOSE_OPERATION: \"choose-operation\",\n  CLEAR: \"clear\",\n  DELETE_DIGIT: \"delete-digit\",\n  EVALUATE: \"evaluate\",\n};\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case ACTIONS.ADD_DIGIT:\n      if (state.overwrite) {\n        return {\n          ...state,\n          currentOperand: payload.digit,\n          overwrite: false,\n        };\n      }\n      if (payload.digit === \"0\" && state.currentOperand === \"0\") {\n        return state;\n      }\n      if (payload.digit === \".\" && state.currentOperand === \"0\")\n        return { ...state, currentOperand: \"0.\" };\n      if (payload.digit === \".\" && state.currentOperand.includes(\".\")) {\n        return state;\n      }\n      return {\n        ...state,\n        currentOperand: `${\n          state.currentOperand === \"0\" ? \"\" : state.currentOperand\n        }${payload.digit}`,\n      };\n    default:\n      return state;\n    case ACTIONS.CHOOSE_OPERATION:\n      if (state.currentOperand === \"0\" && state.previousOperand === \"0\") {\n        return state;\n      }\n\n      if (state.currentOperand === \"\") {\n        return {\n          ...state,\n          operation: payload.operation,\n        };\n      }\n\n      if (state.previousOperand == null) {\n        return {\n          ...state,\n          operation: payload.operation,\n          previousOperand: state.currentOperand,\n          currentOperand: \"\",\n        };\n      }\n      return {\n        ...state,\n        previousOperand: evaluate(state),\n        operation: payload.operation,\n        currentOperand: \"\",\n      };\n    case ACTIONS.CLEAR:\n      return { currentOperand: \"0\" };\n    case ACTIONS.DELETE_DIGIT:\n      if (state.overwrite) {\n        return {\n          ...state,\n          overwrite: false,\n          currentOperand: \"\",\n        };\n      }\n      if (state.currentOperand === \"\") return state;\n      if (state.currentOperand.length === 1) {\n        return { ...state, currentOperand: \"\" };\n      }\n\n      return {\n        ...state,\n        currentOperand: state.currentOperand.slice(0, -1),\n      };\n    case ACTIONS.EVALUATE:\n      if (\n        state.operation === \"\" ||\n        state.currentOperand === \"0\" ||\n        state.previousOperand === \"\"\n      ) {\n        return state;\n      }\n      return {\n        ...state,\n        overwrite: true,\n        previousOperand: null,\n        operation: null,\n        currentOperand: evaluate(state),\n      };\n  }\n}\n\nfunction evaluate({ currentOperand, previousOperand, operation }) {\n  const current = parseFloat(currentOperand);\n  const prev = parseFloat(previousOperand);\n  if (isNaN(current) || isNaN(prev)) return \"\";\n  let calculation = \"\";\n  switch (operation) {\n    case \"+\":\n      calculation = prev + current;\n      break;\n    case \"-\":\n      calculation = prev - current;\n      break;\n    case \"*\":\n      calculation = prev * current;\n      break;\n    case \"รท\":\n      calculation = prev / current;\n      break;\n    default:\n  }\n  return calculation.toString();\n}\n\nconst INTEGER_FORMATTER = new Intl.NumberFormat(\"en-us\", {\n  maximumFractionDigits: 0,\n})\n\nfunction formatOperand(operand) {\n  if (operand == null) return\n  const [integer, decimal] = operand.split(\".\")\n  if (decimal == null) return INTEGER_FORMATTER.format(integer)\n  return `${INTEGER_FORMATTER.format(integer)\n  }.${decimal}`\n}\n\nfunction App() {\n  const [{ currentOperand, previousOperand, operation }, dispatch] = useReducer(\n    reducer,\n    { currentOperand: \"0\" }\n  );\n\n  return (\n    <div className=\"calculator-grid\">\n      <div className=\"output\">\n        <div className=\"previous-operand\">\n          {formatOperand(previousOperand)} {operation}\n        </div>\n        <div className=\"current-operand\">{formatOperand(currentOperand)}</div>\n      </div>\n      <button\n        className=\"span-two\"\n        onClick={() => dispatch({ type: ACTIONS.CLEAR })}\n      >\n        AC\n      </button>\n      <button onClick={() => dispatch({ type: ACTIONS.DELETE_DIGIT })}>\n        DEL\n      </button>\n      <OperationButton operation=\"รท\" dispatch={dispatch} />\n      <DigitButton digit=\"1\" dispatch={dispatch} />\n      <DigitButton digit=\"2\" dispatch={dispatch} />\n      <DigitButton digit=\"3\" dispatch={dispatch} />\n      <OperationButton operation=\"*\" dispatch={dispatch} />\n      <DigitButton digit=\"4\" dispatch={dispatch} />\n      <DigitButton digit=\"5\" dispatch={dispatch} />\n      <DigitButton digit=\"6\" dispatch={dispatch} />\n      <OperationButton operation=\"+\" dispatch={dispatch} />\n      <DigitButton digit=\"7\" dispatch={dispatch} />\n      <DigitButton digit=\"8\" dispatch={dispatch} />\n      <DigitButton digit=\"9\" dispatch={dispatch} />\n      <OperationButton operation=\"-\" dispatch={dispatch} />\n      <DigitButton digit=\".\" dispatch={dispatch} />\n      <DigitButton digit=\"0\" dispatch={dispatch} />\n      <button\n        className=\"span-two\"\n        onClick={() => dispatch({ type: ACTIONS.EVALUATE })}\n      >\n        =\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}